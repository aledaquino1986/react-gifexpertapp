{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","React","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevCategory","type","placeholder","value","onChange","target","handleInputChange","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","console","log","className","src","alt","GifGrid","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,IAAMC,SAAS,IADV,mBAClCC,EADkC,KACtBC,EADsB,KAiBzC,OACE,sBAAMC,SAXa,SAAAC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BT,GAAc,SAAAU,GACZ,MAAM,CAAEP,GAAR,mBAAuBO,OAEzBN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,YAAaT,EACbU,MAAOV,EACPW,SAAU,SAAAR,GAAC,OApBjB,SAA2BA,GACzBF,EAAcE,EAAES,OAAOF,OAmBJG,CAAkBV,S,8BC1B5BW,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACjBC,EADiB,iDAC+BC,UAClDH,GAFmB,+DAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMEA,EAAKC,OANP,uBAMbC,EANa,EAMbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GACpB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAZhB,kBAgBdM,GAhBc,4CAAH,sDCqBLO,EAlBM,SAAAf,GAAa,IAAD,EACLhB,mBAAS,CACjCuB,KAAM,GACNS,SAAS,IAHoB,mBACxBC,EADwB,KACjBC,EADiB,KAe/B,OATAC,qBAAU,WACRpB,EAAQC,GAAUoB,MAAK,SAAAC,GACrBH,EAAS,CACPX,KAAMc,EACNL,SAAS,SAGZ,CAAChB,IAEGiB,GCNMK,EAVK,SAAC,GAAuB,EAArBX,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEhC,OADAqB,QAAQC,IAAIZ,GAEV,sBAAKa,UAAU,yCAAf,UACE,qBAAKC,IAAKxB,EAAKyB,IAAKf,IACpB,6BAAKA,QCiBIgB,EAnBC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EACEe,EAAaf,GAAjCa,EADkB,EACxBN,KAAcS,EADU,EACVA,QAEtB,OACE,qCACG,IACD,6BAAKhB,IACJgB,GAAW,4CACZ,qBAAKS,UAAU,YAAf,SACE,6BACGZ,EAAOJ,KAAI,SAAAC,GACV,OAAO,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBmB,IAAKnB,EAAIC,iBCQnCmB,EApBM,WACnB,IADyB,EAGW/C,IAAMC,SAFhB,CAAC,cADF,mBAGlB+C,EAHkB,KAGNjD,EAHM,KAKzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACGiD,EAAWtB,KAAI,SAAAT,GACd,OAAO,cAAC,EAAD,CAASA,SAAUA,GAAeA,Y,MCZnDgC,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.50e9c5f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  function handleInputChange(e) {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(prevCategory => {\r\n        return [inputValue, ...prevCategory];\r\n      });\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder={inputValue}\r\n        value={inputValue}\r\n        onChange={e => handleInputChange(e)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async category => {\r\n  let url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=5DGJ6z2PCeVztvJyNWg9S3O9EX75kxrV`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = category => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  console.log(title);\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <h4>{title}</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from \"react\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\n\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <h3>{category}</h3>\r\n      {loading && <h3>Loading...</h3>}\r\n      <div className=\"card-grid\">\r\n        <ul>\r\n          {images.map(img => {\r\n            return <GifGridItem {...img} key={img.id} />;\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const initialCategories = [\"One Punch\"];\r\n\r\n  const [categories, setCategories] = React.useState(initialCategories);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map(category => {\r\n          return <GifGrid category={category} key={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}